<style>
    .card {
        margin-bottom: 24px;
        box-shadow: 0 2px 3px #e4e8f0;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #eff0f2;
        border-radius: 1rem;
    }

    .activity-checkout {
        list-style: none;
    }

    .activity-checkout .checkout-icon {
        position: absolute;
        top: -4px;
        left: -24px;
    }

    .activity-checkout .checkout-item {
        position: relative;
        padding-bottom: 24px;
        padding-left: 35px;
        border-left: 2px solid #f5f6f8;
    }

    .activity-checkout .checkout-item:first-child {
        border-color: #3b76e1;
    }

    .activity-checkout .checkout-item:first-child:after {
        background-color: #3b76e1;
    }

    .activity-checkout .checkout-item:last-child {
        border-color: transparent;
    }

    .avatar-xs {
        height: 1rem;
        width: 1rem;
    }

    .avatar-sm {
        height: 2rem;
        width: 2rem;
    }

    .avatar {
        height: 3rem;
        width: 3rem;
    }

    .avatar-md {
        height: 4rem;
        width: 4rem;
    }

    .avatar-lg {
        height: 5rem;
        width: 5rem;
    }

    .avatar-xl {
        height: 6rem;
        width: 6rem;
    }

    .avatar-title {
        align-items: center;
        background-color: #3b76e1;
        color: #fff;
        display: flex;
        font-weight: 500;
        height: 100%;
        justify-content: center;
        width: 100%;
    }

    .card-radio {
        background-color: #fff;
        border: 2px solid #eff0f2;
        border-radius: .75rem;
        padding: .5rem;
        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .card-radio:hover {
        cursor: pointer;
    }

    .card-radio-label {
        display: block;
    }

    .card-radio-input {
        display: none;
    }

    .card-radio-input:checked+.card-radio {
        border-color: #3b76e1 !important;
    }

    .font-size-16 {
        font-size: 16px !important;
    }

    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    a {
        text-decoration: none !important;
    }

    .form-control {
        display: block;
        width: 100%;
        padding: 0.47rem 0.75rem;
        font-size: .875rem;
        font-weight: 400;
        line-height: 1.5;
        color: #545965;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #e2e5e8;
        border-radius: 0.75rem;
        transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }

    .edit-btn {
        width: 35px;
        height: 35px;
        line-height: 40px;
        text-align: center;
        position: absolute;
        right: 25px;
        margin-top: -50px;
    }

    .ribbon {
        position: absolute;
        right: -26px;
        top: 20px;
        transform: rotate(45deg);
        color: #fff;
        font-size: 13px;
        font-weight: 500;
        padding: 1px 22px;
    }

    .coupon-card {
        width: 300px;
        padding: 10px;
        border-radius: 20px;
        background: orange;
        border: none;
        color: #fff;
        height: 250px;
        display: flex;
        align-items: center;
        justify-content: center;
    }








    /* .image {
        position: absolute;
        opacity: .1;
        left: 0;
        top: 0;
    }

    .image2 {
        position: absolute;
        bottom: 0;
        right: 0;
        opacity: .1;
    } */
</style>

<%- include('navbar') %>

    <div class="container my-5">

        <div class="row">
            <div class="col-xl-8">

                <div class="card">
                    <div class="card-body">
                        <ol class="activity-checkout mb-0 px-4 mt-3">

                            <li class="checkout-item">
                                <div class="avatar checkout-icon p-1">
                                    <div class="avatar-title rounded-circle bg-primary">
                                        <i class="bx bxs-truck text-white font-size-20"></i>
                                    </div>
                                </div>
                                <div class="feed-item-list">
                                    <div>
                                        <h5 class="font-size-16 mb-1">Shipping Info</h5>
                                        <p class="text-muted text-truncate mb-4">Choose or add new shipping address
                                            <span class="ml-2">
                                                <!-- Add address button-->
                                                <% if (profileDetails.address.length<4){%>
                                                    <span class="ml-2">
                                                        <!-- Add address button-->
                                                        <i class="fas fa-plus  text-success add-address-button"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#add-address-modal"></i>
                                                    </span>
                                                    <% }else{ %>
                                                        <h6 class="btn text-danger">Address limit reached</h6>
                                                        <% }%>
                                            </span>
                                        </p>
                                        <div class="mb-3">
                                            <div class="row">
                                                <% profileDetails.address.forEach((address,index)=>{ %>
                                                    <!-- address forEach -->
                                                    <div class="col-lg-6 col-sm-6 mt-3">
                                                        <div data-bs-toggle="collapse ">
                                                            <label class="card-radio-label mb-0 ">
                                                                <input type="radio" name="addressRadio"
                                                                    value="<%= index%>" class="card-radio-input">
                                                                <div class="card-radio  p-3">
                                                                    <span class="fs-14 mb-4 d-block">Address <%= index+1
                                                                            %></span>
                                                                    <span class="fs-14 mb-2 d-block text-truncate">
                                                                        <%= address.homeAddress %>
                                                                    </span>
                                                                    <span
                                                                        class="text-muted fw-normal  d-block text-truncate">
                                                                        <%= address.areaAddress %>
                                                                    </span>

                                                                    <span
                                                                        class="text-muted fw-normal d-block text-truncate">
                                                                        <%= address.landmark %>
                                                                    </span>
                                                                    <span
                                                                        class="text-muted fw-normal d-block text-truncate">
                                                                        <%= address.city %>
                                                                    </span>
                                                                    <span
                                                                        class="text-muted fw-normal d-block text-truncate">
                                                                        <%= address.pincode %>
                                                                    </span>
                                                                    <span
                                                                        class="text-muted fw-normal d-block text-truncate">
                                                                        <%= address.state %>
                                                                    </span>
                                                                    <hr>
                                                                    <button type="button"
                                                                        class="btn edit-address-button text-primary btn-sm"
                                                                        data-bs-toggle="modal"
                                                                        data-bs-target="#edit-address-modal"
                                                                        data-homeAddress="<%= address.homeAddress%>"
                                                                        data-areaAddress="<%= address.areaAddress%>"
                                                                        data-pincode="<%= address.pincode%>"
                                                                        data-city="<%= address.city%>"
                                                                        data-landmark="<%= address.landmark%>"
                                                                        data-state="<%= address.state%>"
                                                                        data-index="<%= index%>">
                                                                        <i class="fa-solid fa-eye-dropper"></i></button>

                                                                    <button class="btn text-danger btn-sm"
                                                                        onclick="deleteAddress('<%= index %>')"><i
                                                                            class="fa-regular fa-trash-can"></i></button>
                                                                </div>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <!-- address forEach end -->
                                                    <% }) %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <li class="checkout-item">
                                <div class="avatar checkout-icon p-1">
                                    <div class="avatar-title rounded-circle bg-primary">
                                        <i class="bx bxs-wallet-alt text-white font-size-20"></i>
                                    </div>
                                </div>
                                <div class="feed-item-list">
                                    <div>
                                        <h5 class="font-size-16 mb-1">Payment Info</h5>
                                        <p class="text-muted text-truncate mb-4">Choose a payment method</p>
                                    </div>
                                    <div>
                                        <h5 class="font-size-14 mb-3">Payment method :</h5>
                                        <div class="row">
                                            <div class="col-lg-3 col-sm-6">
                                                <div data-bs-toggle="collapse">
                                                    <label class="card-radio-label">
                                                        <input type="radio" name="pay-method" id="pay-methodoption1"
                                                            value="2" class="card-radio-input">
                                                        <span class="card-radio py-3 text-center text-truncate">
                                                            <i class="bx bx-credit-card d-block h2 mb-3"></i>
                                                            Wallet
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-sm-6">
                                                <div>
                                                    <label class="card-radio-label">
                                                        <input type="radio" name="pay-method" id="pay-methodoption2"
                                                            value="1" class="card-radio-input">
                                                        <span class="card-radio py-3 text-center text-truncate">
                                                            <i class="bx bxl-paypal d-block h2 mb-3"></i>
                                                            RazorPay
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>

                                            <div class="col-lg-3 col-sm-6">
                                                <div>
                                                    <label class="card-radio-label">
                                                        <input type="radio" name="pay-method" id="pay-methodoption3"
                                                            value="0" class="card-radio-input">

                                                        <span class="card-radio py-3 text-center text-truncate">
                                                            <i class="bx bx-money d-block h2 mb-3"></i>
                                                            <span>Cash on Delivery</span>
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        </ol>
                    </div>
                </div>

                <div class="row my-4">
                    <div class="col">
                        <a href="ecommerce-products.html" class="btn btn-link text-muted">
                            <i class="mdi mdi-arrow-left me-1"></i> Continue Shopping </a>
                    </div> <!-- end col -->
                    <div class="col">
                        <div class="text-end mt-2 mt-sm-0">
                            <button type="submit" class="btn btn-success" onclick="placeOrderButton()">
                                <i class="mdi mdi-cart-outline me-1"></i> Place order</button>
                        </div>
                    </div> <!-- end col -->
                </div> <!-- end row-->
            </div>



            <div class="col-xl-4">
                <div class="mt-5 mt-lg-0">
                    <div class="d-flex justify-content-center align-items-center ">
                        <div class="d-flex card text-center coupon-card">

                            <h1 id="couponDiscount"><span id="coupon-value">Coupon</span> OFF</h1>
                            <h5 class="d-block">Minimum Purchase: <span id="minAmount"></span></h5>
                            <form action="">
                                <select class="form-select" id="couponSelect">
                                    <option value="" selected disabled>Select a coupon</option>
                                    <% coupons.forEach((coupon)=> { %>
                                        <option value="<%= coupon._id %>">
                                            <%= coupon.couponName %>
                                        </option>
                                        <% }) %>
                                </select>
                                <div class="pt-3">
                                    <button type="button" class="btn btn-primary" onclick="applyCoupon()">Apply</button>
                                    <button type="button" class="btn btn-danger"
                                        onclick="removeCoupon()">Remove</button>
                                </div>
                            </form>
                        </div>


                    </div>
                    <div class="card border shadow-none">
                        <div class="card-header bg-transparent border-bottom py-3 px-4">
                            <h5 class="font-size-16 mb-0">Order Summary </h5>
                        </div>
                        <div class="card-body p-4 pt-2">

                            <div class="table-responsive">
                                <table class="table mb-0">
                                    <tbody>
                                        <tr>
                                            <td>Sub Total </td>
                                            <td>:</td>
                                            <td class="text-end " id="sub-total-box">&#8377; <%=
                                                    productInCart.totalPrice %>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>Discount </td>
                                            <td>:</td>
                                            <td class="text-end " id="total-discount">&#8377;
                                                <%= (productInCart.totalPrice-productInCart.payableAmount).toLocaleString()
                                                    %>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>Coupon discount </td>
                                            <td>:</td>
                                            <td class="text-end" id="coupon-discount-box">&#8377; 00:00</td>
                                        </tr>
                                        <tr>
                                            <td>Shipping Charge </td>
                                            <td>:</td>
                                            <td class="text-end">&#8377;<%= productInCart.payableAmount<550?"50":"00" %>
                                            </td>
                                        </tr>
                                        <tr class="bg-light">
                                            <th>Total </th>
                                            <td>:</td>
                                            <td class="text-end">
                                                <span class="fw-bold" id="total-box">
                                                    &#8377;<%= productInCart.payableAmount.toLocaleString() %>
                                                </span>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <!-- end table-responsive -->
                        </div>
                    </div>
                </div>
                <div class="card checkout-order-summary">
                    <div class="card-body">
                        <div class="p-3 bg-light mb-3">
                            <h5 class="font-size-16 mb-0">Product Summary <span class="float-end ms-2"></span></h5>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-centered mb-0 table-nowrap">
                                <thead>
                                    <tr>
                                        <th class="border-top-0" style="width: 110px;" scope="col">Product</th>
                                        <th class="border-top-0" scope="col">Product Description</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% productInCart.items.forEach((product,index)=>{ %>
                                        <tr>
                                            <th scope="row"><img src="../../<%= product.productID.image[0] %>"
                                                    alt="product-img" title="product-img" class="avatar-lg rounded">
                                            </th>
                                            <td>
                                                <h5 class="font-size-16 text-truncate" style="max-width: 200px;">
                                                    <%= product.productID.productName %>
                                                </h5>
                                                <h6 class="font-size-16 text-truncate" style="max-width: 200px;">
                                                    <%= product.productID.brand %>
                                                </h6>
                                                <p class="text-muted mb-0">
                                                    <i class="bx bxs-star text-warning"></i>
                                                    <i class="bx bxs-star text-warning"></i>
                                                    <i class="bx bxs-star text-warning"></i>
                                                    <i class="bx bxs-star text-warning"></i>
                                                    <i class="bx bxs-star-half text-warning"></i>
                                                </p>
                                                <p class="text-muted mb-0 mt-1">&#8377; <%=
                                                        Math.round((product.productID.productPrice)*(1-(product.productID.discount/100))).toLocaleString() %> x <%=
                                                            product.productCount%>
                                                </p>
                                            </td>
                                        </tr>
                                        <% }) %>
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end row -->

    </div>


    <!-- modals -->


    <!-- ADD Address Modal -->
    <div class="modal fade" id="add-address-modal" tabindex="-1" aria-labelledby="exampleModalCenterTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered custom-modal-width" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Address Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body px-5">
                    <form action="/add-address-checkout" method="post" id="add-address-form">
                        <!-- Form Group (city)-->
                        <div>
                            <label class="small mb-1" for="inputCity">City</label>
                            <input type="text" class="form-control" id="inputCity" name="city">
                            <label for="" class="text-danger AddValidate"></label>
                        </div>
                        <!-- Form Group (home address)-->
                        <div>
                            <label class="small mb-1" for="inputHomeAddress">Home
                                Address</label>
                            <input type="text" class="form-control" id="inputHomeAddress" name="homeAddress">
                            <label for="" class="text-danger AddValidate"></label>
                        </div>
                        <!-- Form Group (area address)-->
                        <div>
                            <label class="small mb-1" for="inputAreaAddress">area Address</label>
                            <input type="text" class="form-control" id="inputAreaAddress" name="areaAddress">
                            <label for="" class="text-danger AddValidate"></label>
                        </div>

                        <!-- Form Group (pincode)-->
                        <div>
                            <label class="small mb-1" for="inputPincode">Pincode</label>
                            <input type="text" class="form-control" id="inputPincode" name="pincode">
                            <label for="" class="text-danger AddValidate"></label>
                        </div>
                        <!-- Form Group (state)-->
                        <div>
                            <label class="small mb-1" for="inputState">State</label>
                            <input type="text" class="form-control" id="inputState" name="state">
                            <label for="" class="text-danger AddValidate"></label>
                        </div>
                        <div>
                            <label class="small mb-1" for="inputLandmark">Landmark</label>
                            <input type="text" class="form-control" id="inputLandmark" name="landmark">
                            <label for="" class="text-danger AddValidate"></label>
                        </div>
                        <div class="mt-3">
                            <!-- <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> -->
                            <button type="reset" class="btn btn-dark">Clear</button>
                            <button type="submit" class="btn btn-success">Save
                                changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- end of the add address modal -->


    <!-- EDit Address Modal -->
    <div class="modal fade" id="edit-address-modal" tabindex="-1" aria-labelledby="exampleModalCenterTitle"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered custom-modal-width" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Address Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body px-5">
                    <form action="/edit-address-checkout" method="post" id="edit-address-form">
                        <!-- Form Group (city)-->
                        <div>
                            <label class="small mb-1" for="editCity">City</label>
                            <input type="text" class="form-control" id="editCity" name="city">
                            <label for="" class="text-danger validate"></label>
                        </div>
                        <!-- Form Group (home address)-->
                        <div>
                            <label class="small mb-1" for="editHome">Home
                                Address</label>
                            <input type="text" class="form-control" id="editHome" name="homeAddress">
                            <label for="" class="text-danger validate"></label>
                        </div>
                        <!-- Form Group (area address)-->
                        <div>
                            <label class="small mb-1" for="editArea">area Address</label>
                            <input type="text" class="form-control" id="editArea" name="areaAddress">
                            <label for="" class="text-danger validate"></label>
                        </div>

                        <!-- Form Group (pincode)-->
                        <div>
                            <label class="small mb-1" for="editPincode">Pincode</label>
                            <input type="text" class="form-control" id="editPincode" name="pincode">
                            <label for="" class="text-danger validate"></label>
                        </div>
                        <!-- Form Group (state)-->
                        <div>
                            <label class="small mb-1" for="editState">State</label>
                            <input type="text" class="form-control" id="editState" name="state">
                            <label for="" class="text-danger validate"></label>
                        </div>
                        <div>
                            <label class="small mb-1" for="editLandmark">Landmark</label>
                            <input type="text" class="form-control" id="editLandmark" name="landmark">
                            <label for="" class="text-danger validate"></label>
                        </div>
                        <div class="mt-3">
                            <!-- <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button> -->
                            <button type="reset" class="btn btn-dark">Clear</button>
                            <button type="submit" class="btn btn-success">Save
                                changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- end of the edit modal -->

    <%- include('footer') %>
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

        <script>


            function checkTextField(text) {
                const check = text.trim().split('')
                for (const letter of check) {
                    if (!isNaN(letter)) {
                        return true
                    }
                }
                return false
            }

            const addAddressForm = document.getElementById('add-address-form')
            const city = document.getElementsByName('city')[0]
            const home = document.getElementsByName('homeAddress')[0]
            const area = document.getElementsByName('areaAddress')[0]
            const pin = document.getElementsByName('pincode')[0]
            const state = document.getElementsByName('state')[0]
            const landmark = document.getElementsByName('landmark')[0]


            addAddressForm.addEventListener('submit', (e) => {

                e.preventDefault()
                let validate = true

                document.getElementsByClassName('AddValidate')[0].innerHTML = ""
                document.getElementsByClassName('AddValidate')[1].innerHTML = ""
                document.getElementsByClassName('AddValidate')[2].innerHTML = ""
                document.getElementsByClassName('AddValidate')[3].innerHTML = ""
                document.getElementsByClassName('AddValidate')[4].innerHTML = ""
                document.getElementsByClassName('AddValidate')[5].innerHTML = ""




                if (city.value.trim() === "" || city.value.length > 80 || checkTextField(city.value)) {
                    validate = false
                    document.getElementsByClassName('AddValidate')[0].innerHTML = "It is not a city name";

                }

                if (home.value.trim() === '' || home.value.length === 0 || home.value.length > 300) {
                    validate = false
                    document.getElementsByClassName('AddValidate')[1].innerHTML = "Enter your house name and address";

                }
                if (area.value.trim() === '' || area.value.length === 0 || area.value.length > 300) {
                    validate = false
                    document.getElementsByClassName('AddValidate')[2].innerHTML = "Enter correct road number and area";

                }

                if (pin.value.length != 6 || isNaN(pin.value)) {
                    validate = false
                    document.getElementsByClassName('AddValidate')[3].innerHTML = "Pincode is not correct number must not be less than 6"
                }


                if (state.value.trim() === "" || state.value.length > 30 || checkTextField(state.value)) {
                    validate = false
                    document.getElementsByClassName('AddValidate')[4].innerHTML = "enter a correct state name";

                }
                if (landmark.value.trim() === "" || landmark.value.length > 300) {
                    validate = false
                    document.getElementsByClassName('AddValidate')[5].innerHTML = "enter a correct landmark name";

                }
                if (validate) {
                    addAddressForm.submit()
                }
            })

            //edit address modal functions

            const editAddressButton = document.querySelectorAll('.edit-address-button')
            editAddressButton.forEach((button) => {
                button.addEventListener('click', () => {
                    const homeAddress = button.getAttribute('data-homeAddress')
                    console.log(homeAddress);
                    const areaAddress = button.getAttribute('data-areaAddress')
                    const pincode = button.getAttribute('data-pincode')
                    const state = button.getAttribute('data-state')
                    const landmark = button.getAttribute('data-landmark')
                    const city = button.getAttribute('data-city')
                    const index = button.getAttribute('data-index')

                    document.getElementById('editHome').value = homeAddress.trim()
                    document.getElementById('editArea').value = areaAddress.trim()
                    document.getElementById('editPincode').value = pincode
                    document.getElementById('editState').value = state.trim()
                    document.getElementById('editCity').value = city.trim()
                    document.getElementById('editLandmark').value = landmark.trim()

                    document.getElementById('edit-address-form').action = `/edit-address-checkout/${index}`
                })

            })

            //delete address
            function deleteAddress(index) {
                swal.fire({
                    icon: 'question',
                    title: 'Remove address',
                    text: 'Are you sure? do you wanna delete the selected Address?',
                    showCancelButton: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        const URL = `/delete-address/${index}`
                        fetch(URL, {
                            method: 'delete',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then((res) => {
                            if (res.ok) {
                                swal.fire({
                                    icon: 'success',
                                    title: 'Address removed',
                                    showCancelButton: false,
                                    timer: 900
                                }).then(() => {
                                    window.location.reload()
                                })
                            }
                        }).catch((err) => {
                            console.log(`error on address removing${err}`)
                        })
                    }
                })
            }


            //validating address and payment method has choosen or not

            const addressRadio = document.getElementsByName('addressRadio')
            const paymentOptions = document.getElementsByName('pay-method')


            function placeOrderButton() {
                let addressIsChecked = false
                let selectedAddressOption = 0
                for (let i = 0; i < addressRadio.length; i++) {
                    if (addressRadio[i].checked) {
                        selectedAddressOption = addressRadio[i].value
                        addressIsChecked = true
                        break;
                    }
                }

                if (!addressIsChecked) {
                    iziToast.warning({
                        message: 'Select an Address to delivery your product'
                    });
                    return
                }

                let paymentIsChecked = false
                let selectedPaymentOption = 0
                for (let i = 0; i < paymentOptions.length; i++) {
                    if (paymentOptions[i].checked) {
                        selectedPaymentOption = paymentOptions[i].value
                        paymentIsChecked = true
                        break;
                    }
                }

                if (!paymentIsChecked) {
                    iziToast.warning({
                        message: 'Select a payment method'
                    });
                    return
                }


                if (parseInt(selectedPaymentOption) === 0) {
                    const URL = '/checkout-submit'
                    fetch(URL, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ selectedAddressOption, selectedPaymentOption })
                    }).then((res) => {
                        if (!res.ok) {
                            swal.fire({
                                icon: 'error',
                                title: 'Order couldn\'t be placed',
                                text: 'order cannot be placed at this moment,please try again later',
                                showConfirmButton: false,
                                timer: 9000
                            })
                        }
                        return res.json()
                    }).then((data) => {
                        window.location.href = '/order-confirmed'
                    }).catch((err) => {
                        console.log('error on placing order', err)
                    })
                }
                if (parseInt(selectedPaymentOption) === 1) {

                    const URL = '/render-razorPay'
                    fetch(URL, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    }).then((res) => {
                        return res.json()
                    }).then((data) => {
                        if (data.orderID) {
                            var options = {
                                "key": "rzp_test_fJQUYeRarb4G8S", 
                                "amount": Math.round(data.totalAmount * 100), 
                                "currency": "INR",
                                "name": "Aura Candle Studio", 
                                "description": "Thanks for shopping",
                                "order_id": data.orderID,
                                "handler": function (response) {
                                    const URL = '/checkout-submit'
                                    fetch(URL, {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({ selectedAddressOption, selectedPaymentOption })
                                    }).then((res) => {
                                        if (!res.ok) {
                                            swal.fire({
                                                icon: 'error',
                                                title: 'Order couldn\'t be placed',
                                                text: 'order cannot be placed at this moment,please try again later',
                                                showConfirmButton: false,
                                                timer: 9000
                                            })
                                        }
                                        return res.json()
                                    }).then((data) => {
                                        window.location.href = '/order-confirmed'
                                    }).catch((err) => {
                                        console.log('error on placing order', err)
                                    })
                                },
                                "prefill": { 
                                    "name": data.userName,
                                    "email": data.email,
                                    "contact": data.phone 
                                },
                                "notes": {
                                    "address": "Razorpay Corporate Office"
                                },
                                "theme": {
                                    "color": "#3399cc"
                                }
                            };
                            const rzp1 = new Razorpay(options);
                            rzp1.on('payment.failed', function (response) {
                                const URL = '/payment-pending'
                                    fetch(URL, {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({ selectedAddressOption, selectedPaymentOption })
                                    }).then((res) => {
                                        if (!res.ok) {
                                            swal.fire({
                                                icon: 'error',
                                                title: 'Order couldn\'t be placed',
                                                text: 'order cannot be placed at this moment,please try again later',
                                                showConfirmButton: false,
                                                timer: 9000
                                            })
                                        }
                                        return res.json()
                                    }).then((data) => {
                                        window.location.href = '/order-pending'
                                    }).catch((err) => {
                                        console.log('error on cancel razorpay placing order', err)
                                    })
                            });
                            rzp1.open();
                        }

                    }).catch((err) => {
                        console.log('error on render razor pay instance', err)
                    })


                }

            }

            //coupon

            const couponSelect = document.getElementById('couponSelect')
            couponSelect.addEventListener('change', (e) => {

                const URL = "/get-coupon";
                fetch(URL, {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ coupon: e.target.value })
                }).then((res) => {
                    return res.json()
                }).then((data) => {
                    document.getElementById('coupon-value').innerHTML = "&#8377;" + data.discount
                    document.getElementById('minAmount').innerHTML = data.minPurchase
                }).catch((err) => {
                    console.log(err)
                })
            })


            function applyCoupon() {
                if (!couponSelect.value) {
                    Swal.fire({
                        icon: "info",
                        title: "Select a coupon"
                    })

                } else {
                    const URL = "/apply-coupon";
                    fetch(URL, {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ couponID: couponSelect.value })
                    }).then((res) => {
                        return res.json()
                    }).then((data) => {

                        if (data.minNotreached) {
                            Swal.fire({
                                icon: "error",
                                title: "min purchase not reached"
                            })
                        }

                        if (data.success) {
                            Swal.fire({
                                icon: "success",
                                title: "coupon applied",
                                showConfirmButton: false,
                                timer: 700
                            }).then(() => {
                                document.getElementById('total-box').innerHTML = "&#8377;" + data.payableAmount.toLocaleString()
                                document.getElementById('coupon-discount-box').innerHTML = data.discount.toLocaleString()
                            })

                        }
                    }).catch((err) => {
                        console.log(err)
                    })
                }
            }


            function removeCoupon() {

                const URL = "/remove-coupon";
                fetch(URL, {
                    method: "PUT",
                    headers: {
                        'Content-Type': 'application/json'
                    }

                }).then((res) => {
                    return res.json()
                }).then((data) => {

                    if (data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "coupon removed",
                            showConfirmButton: false,
                            timer: 700
                        }).then(() => {
                            document.getElementById('total-box').innerHTML = "&#8377;" + data.payableAmount.toLocaleString()
                            document.getElementById('coupon-discount-box').innerHTML = "00:00"
                        })

                    }
                }).catch((err) => {
                    console.log(err)
                })
            }
            

        </script>