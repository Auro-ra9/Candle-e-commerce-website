<style>
    .cart-container {
        min-height: 100vh;
    }

    .avatar-lg {
        height: 5rem;
        width: 5rem;
    }

    .font-size-18 {
        font-size: 18px !important;
    }

    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    a {
        text-decoration: none !important;
    }

    .w-xl {
        min-width: 160px;
    }

    .card {
        margin-bottom: 24px;
        -webkit-box-shadow: 0 2px 3px #e4e8f0;
        box-shadow: 0 2px 3px #e4e8f0;
    }

    .card {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #eff0f2;
        border-radius: 1rem;
    }

    .nav-borders .nav-link.active {
        color: #0061f2;
        border-bottom-color: #0061f2;
    }

    .nav-borders .nav-link {
        color: #69707a;
        border-bottom-width: 0.125rem;
        border-bottom-style: solid;
        border-bottom-color: transparent;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0;
        padding-right: 0;
        margin-left: 1rem;
        margin-right: 1rem;
    }

    .empty-cart {
        min-height: 80vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<%-include('navbar') %>
    <div class="container-xl px-4 mt-4">
        <!-- Account page navigation-->
        <nav class="nav nav-borders">
            <a class="nav-link  ms-0" href="/profile">Profile</a>
            <a class="nav-link  " href="/security">Security</a>
            <a class="nav-link active " href="/orders">Orders</a>
            <a class="nav-link  " href="/cancelled-orders">Cancelled Orders</a>
            <a class="nav-link   " href="/wallet">Wallet</a>


        </nav>
        <hr class="mt-0 mb-4">
        <div class="row">
            <div class="container pt-5 cart-container">
                <div class="row">

                    <%if(orders.length!=0){ %>
                        <% orders.forEach((order,index)=>{ %>
                            <div class="col-xl-8">
                                <div class="card border shadow-none">
                                    <div class="card-body">

                                        <% order.products.forEach((product,index)=>{ %>

                                            <!-- row start -->
                                            <div class="d-flex align-items-start border-bottom pb-3">
                                                <div class="me-4">
                                                    <a href="/product-view/<%= product.productID.id %>">
                                                        <img src="../../<%=product.productImage%>" loading="lazy" alt=""
                                                            class="avatar-lg rounded"></a>
                                                </div>
                                                <div class="flex-grow-1 align-self-center overflow-hidden">
                                                    <div>
                                                        <h5 class="text-truncate font-size-18">
                                                            <a href="/product-view/<%= product.productID.id %>">
                                                                <%= product.productName%>
                                                            </a>

                                                        </h5>
                                                        <p class="text-muted mb-0">
                                                            <i class="bx bxs-star text-warning"></i>
                                                            <i class="bx bxs-star text-warning"></i>
                                                            <i class="bx bxs-star text-warning"></i>
                                                            <i class="bx bxs-star text-warning"></i>
                                                            <i class="bx bxs-star-half text-warning"></i>
                                                        </p>
                                                        <p class="mb-0 mt-1">Brand : <span class="fw-medium">
                                                                <%= product.brand%>
                                                            </span></p>
                                                        <p class="mb-0 mt-1">Quantity : <span class="fw-medium">
                                                                <%= product.quantity %>
                                                            </span></p>
                                                        <p class="mb-0 mt-1">Coupon Discount : <span class="fw-medium">
                                                                &#8377; <%= order.couponDiscount %>
                                                            </span></p>
                                                        <%if(product.discount>0){%>
                                                            <span class="badge bg-danger">
                                                                <%=product.discount %> % OFF
                                                            </span>
                                                            <p class="mb-0 mt-1">Price : <span class="fw-medium">
                                                                    <span class="text-muted me-2"><del
                                                                            class="font-size-16 fw-normal">&#8377;
                                                                            <%= product.price%>
                                                                        </del></span>
                                                                    &#8377; <%=
                                                                        (product.price*(1-product.discount/100)).toLocaleString()%>
                                                                </span></p>
                                                            <%}else{%>
                                                                <span class="badge bg-dark">
                                                                    offer unavailable
                                                                </span>
                                                                <p class="mb-0 mt-1">Price :
                                                                    &#8377; <%= product.price.toLocaleString()%>
                                                                        </span></p>
                                                                <%}%>
                                                    </div>
                                                </div>

                                            </div>
                                            <% }) %>
                                                <!-- row end -->

                                                <div>
                                                    <div class="row">
                                                        <div class="col-md-4">
                                                            <div class="mt-3">
                                                                <p class="text-muted mb-2">Order status</p>
                                                                <b class="mb-0 mt-2  badge">
                                                                    <%=order.orderStatus %>
                                                                </b>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-5">
                                                            <div class="mt-3 ">
                                                                <p class="text-muted mb-2">Payment method</p>
                                                                <b>
                                                                    <%=order.paymentMethod %>
                                                                </b>

                                                            </div>
                                                        </div>
                                                        <div class="col-md-3">
                                                            <div class="mt-3">
                                                                <p class="text-muted mb-2 total-count-box  ">Total</p>
                                                                <h5 class="product-total-box">&#8377;
                                                                    <%= (order.totalPrice-
                                                                        order.couponDiscount).toLocaleString() %>
                                                                </h5>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                    </div>
                                </div>
                                <!-- end card -->
                            </div>
                            <div class="col-xl-4">
                                <div class="card border shadow-none">
                                    <div class="card-body">
                                        <div class="flex-shrink-0 ms-2">
                                            <ul class="list-inline font-size-16">
                                                <% if(order.orderStatus !=='Delivered' ){ %>
                                                    <% if(order.orderStatus==='Pending-Returned' ){ %>
                                                        <b class="mb-0 mt-2 text-success">
                                                            Return request sent at <%= order.updatedAt.toLocaleString()
                                                                %>
                                                        </b>
                                                        <% } else if(order.orderStatus==='Pending' ) {%>
                                                            <button class="btn btn-primary"
                                                                onclick="ProceedPay('<%= order.id%>')">Proceed Payment
                                                            </button>
                                                            <button class="btn btn-secondary"
                                                                onclick="discardOrder('<%= order.id%>')">Discard
                                                                Order</button>
                                                            <% } else { %>
                                                                <button class="btn btn-danger"
                                                                    onclick="cancelOrder('<%= order.id %>')">Cancel
                                                                    Order</button>
                                                                <% } %>


                                                                    <% } else { %>
                                                                        <b class="mb-0 mt-2 text-success">
                                                                            Successfully <%= order.orderStatus %> at <%=
                                                                                    order.updatedAt.toLocaleString() %>
                                                                        </b>
                                                                        <% } %>

                                            </ul>
                                        </div>
                                        <p><b>Address: </b>
                                            <%= order.address.homeAddress%>,
                                                <br>
                                                <%= order.address.landmark %>,

                                                    <%=order.address.areaAddress%>,<br>
                                                        <%=order.address.pincode%>
                                                            <br>
                                                            <%=order.address.city %>,
                                                                <%= order.address.state %>
                                        </p>
                                        <p> <b style="color: #ff6200;">Order placed on :</b>
                                            <%=order.createdAt.toLocaleString() %>
                                        </p>
                                        <% if(order.orderStatus==='Delivered' && (!order.reasonForRejection) ){%>
                                            <button class="btn btn-warning"
                                                onclick="returnOrder('<%= order.id%>')">Return order</button>
                                            <%} else if(order.reasonForRejection){%>
                                                <h6>Response from the owner for the return request :<b class="text-secondary">
                                                        <%= order.reasonForRejection %>
                                                    </b>
                                                </h6>
                                                <%}%>

                                                    <button class="btn btn-dark"
                                                        onclick="downloadInvoice('<%= order._id %>')">Invoice</button>

                                    </div>
                                </div>
                            </div>
                            <% }) %>
                                <% }else{ %>
                                    <div class="empty-cart">No Orders yet</div>
                                    <% } %>

                </div>
                <!-- end row -->

            </div>
        </div>
       <!-- pagination -->
        <%- include('pagination') %>
    </div>


    <%- include('footer') %>

        <!-- The Modal for cancellation -->
        <div class="modal" id="cancellation-modal">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Reason for Cancellation</h4>
                    </div>
                    <!-- Modal Body -->
                    <div class="modal-body">
                        <form id="reasonForm" method="post" action="/cancel-order">
                            <div class="form-group">
                                <textarea class="form-control" rows="8" id="message" name="cancelledReason"></textarea>
                                <label for="cancelReason" id="validateLabel" class="text-danger"></label>
                            </div>
                            <div class="form-group mt-4 text-center">
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-success">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- end of the modal -->

        <!-- The Modal for return-request -->
        <div class="modal" id="return-request-modal">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Reason for Requesting return order</h4>
                    </div>
                    <!-- Modal Body -->
                    <div class="modal-body">
                        <form id="returnRequestForm" method="post" action="/return-request-order">
                            <div class="form-group">
                                <textarea class="form-control" rows="8" id="message" name="returningReason"></textarea>
                                <label for="returningReason" id="validateReturnLabel" class="text-danger"></label>
                            </div>
                            <div class="form-group mt-4 text-center">
                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-success">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>

        <!-- end of the modal -->
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

        <script>

            //styling the payment methid, giving different backgrounds for each payment methods
            const paymentBadge = document.querySelectorAll('.badge')


            paymentBadge.forEach(element => {
                if (element.innerHTML.trim() === 'Pending') {
                    element.classList.add('bg-primary', 'text-white')
                }
                if (element.innerHTML.trim() === 'Confirmed') {
                    element.classList.add('bg-success', 'text-white')
                }
                if (element.innerHTML.trim() === 'Shipping') {
                    element.classList.add('bg-info', 'text-white')
                }
                if (element.innerHTML.trim() === 'Delivered') {
                    element.classList.add('bg-success', 'text-white')
                }
                if (element.innerHTML.trim() === 'Pending-Returned') {
                    element.classList.add('bg-warning', 'text-dark')
                }
                if (element.innerHTML.trim() === 'Returned') {
                    element.classList.add('bg-warning', 'text-dark')
                }
                if (element.innerHTML.trim() === 'Cancelled') {
                    element.classList.add('bg-danger', 'text-white')
                }
            })


            //cancel order

            function cancelOrder(orderid) {
                swal.fire({
                    icon: 'warning',
                    title: 'Cancel Order',
                    text: 'Are you sure, do you want to cancel the order?',
                    showCancelButton: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        var cancelModal = new bootstrap.Modal(document.getElementById('cancellation-modal'), {});
                        cancelModal.show();
                        document.getElementById('reasonForm').action = `/cancel-order/${orderid}`
                    }
                })
            }

            const reasonForm = document.getElementById('reasonForm')

            reasonForm.addEventListener('submit', (e) => {
                e.preventDefault()

                document.getElementById('validateLabel').innerHTML = ''
                const cancelledReason = document.getElementsByName('cancelledReason')[0]
                if (cancelledReason.value.trim() === '' || cancelledReason.value.length <= 10 || cancelledReason.value.length > 150) {

                    document.getElementById('validateLabel').innerHTML = 'Reason must be added in words in between 10-100, without reason cannot cancel the order'
                } else {
                    reasonForm.submit()
                }
            })

            //return order
            function returnOrder(orderid) {
                swal.fire({
                    icon: 'warning',
                    title: 'Return Order',
                    text: 'Are you sure, do you want to return the order?',
                    showCancelButton: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        var cancelModal = new bootstrap.Modal(document.getElementById('return-request-modal'), {});
                        cancelModal.show();
                        document.getElementById('returnRequestForm').action = `/return-request-order/${orderid}`
                    }
                })
            }

            //validate return order
            const returnRequestForm = document.getElementById('returnRequestForm')

            returnRequestForm.addEventListener('submit', (e) => {
                e.preventDefault()

                document.getElementById('validateReturnLabel').innerHTML = ''
                const returningReason = document.getElementsByName('returningReason')[0]

                if (returningReason.value.trim() === '' || returningReason.value.length <= 10 || returningReason.value.length > 150) {
                    document.getElementById('validateReturnLabel').innerHTML = 'Request must be in 10-200 characters without reason cannot request for returning the order'

                } else {
                    returnRequestForm.submit()
                }
            })


            //proceed to pay using razorpay
            function ProceedPay(orderid) {
                swal.fire({
                    icon: 'question',
                    title: 'proceed payment',
                    text: 'Are you sure? do you want to proceed to pay?',
                    showCancelButton: true
                }).then((result) => {
                    if (result.isConfirmed) {

                        const URL = '/render-razorPay-pending'
                        fetch(URL, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ orderid })//passing the date to backend for getting the order details 
                            //complete pending amount to pay
                        }).then((res) => {
                            return res.json()
                        }).then((data) => {
                            if (data.orderID) {//get the details with total payable amount
                                var options = {
                                    "key": "rzp_test_fJQUYeRarb4G8S",
                                    "amount": Math.round(data.totalAmount * 100),
                                    "currency": "INR",
                                    "name": "Aura Candle Studio",
                                    "description": "Thanks for shopping",
                                    "order_id": data.orderID,
                                    "handler": function (response) {
                                        const URL = `/checkout-submit-pending-order`
                                        fetch(URL, {
                                            method: 'POST',
                                            headers: {
                                                "Content-Type": "application/json"
                                            },
                                            body: JSON.stringify({ orderid })
                                        }).then((res) => {

                                            return res.json()
                                        }).then((data) => {
                                            if (data.success) {
                                                window.location.href = '/order-confirmed'
                                            }
                                            if (data.error) {
                                                swal.fire({
                                                    icon: 'warning',
                                                    title: 'error',
                                                    text: data.error,
                                                })
                                            }
                                        }).catch((err) => {
                                            console.log(`error on paying using wallet`)
                                        })
                                    },
                                    "prefill": {
                                        "name": data.userName,
                                        "email": data.email,
                                        "contact": data.phone
                                    },
                                    "notes": {
                                        "address": "Razorpay Corporate Office"
                                    },
                                    "theme": {
                                        "color": "#3399cc"
                                    }
                                };
                                const rzp1 = new Razorpay(options);
                                rzp1.on('payment.failed', function (response) {
                                    window.location.href = '/order-pending'
                                });
                                rzp1.open();
                            }

                        }).catch((err) => {
                            console.log('error on render razor pay instance', err)
                        })

                    }
                })
            }

            //discard or delete order
            function discardOrder(orderid) {
                swal.fire({
                    icon: 'question',
                    title: 'Discard Order',
                    text: 'Are you sure? do you want to discard the order?',
                    showCancelButton: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        const URL = `/discard-order/${orderid}`
                        fetch(URL, {
                            method: 'delete',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then((res) => {
                            if (res.ok) {
                                swal.fire({
                                    icon: 'success',
                                    text: 'Order discarder successfully',
                                    title: 'Discard',
                                    showConfirmButton: false,
                                    timer: 2000
                                }).then(() => {
                                    window.location.reload()
                                })
                            }
                        }).catch((err) => {
                            console.log(`error on discarding order fetch : ${err}`)
                        })
                    }
                })
            }


            //download invoice or order details
            function downloadInvoice(orderID) {
                const URL = `/invoice/${orderID}`
                fetch(URL, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                }).then((res) => {
                    if (res.ok) {
                        return res.blob();
                    }
                    throw new Error('Network response was not ok.');
                })
                    .then((blob) => {
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.style.display = 'none';
                        a.href = url;
                        a.download = `report-${Date.now()}.pdf`;
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                    }).catch((err) => {
                        console.log(err);
                    })

            }
        </script>